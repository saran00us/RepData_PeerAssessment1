arm <- c('Acc','Gyro', 'BodyBody', 'Mag', '^t', '^f', 'tBody', '-mean()', '-std()', '-freq()')
newArm <- c('Accelerometer','Gyroscope', 'Body', 'Magnitude', 'Time', 'Frequency', 'TimeBody', 'Mean', 'STD', 'Frequency')
for (x in 1:length(arm)){
names(finalData)<-gsub(arm[x], newArm[x], names(finalData))
}
names(finalData)
#From the data set in step 4, creates a second, independent tidy data
#set with the average of each variable for each activity and each subject.
finalData <- data.table(finalData)
tidyData <- aggregate(. ~Subject + Lable, finalData, mean)
tidyData <- tidyData[order(tidyData$Subject,tidyData$Lable),]
write.table(tidyData, file = "Tidy.txt", row.names = FALSE)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(votes, rating, data = movies)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
g <- ggplot(movies, aes(votes, rating))
print(g)
library(datasets)
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, Fun=mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, Fun=mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, Fun=mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x="Steps/day" y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, FUN = mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram() +labs(title ="Steps per Day" x="Steps/day" y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, FUN = mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram() +labs(title ="Steps per Day", x="Steps/day" ,y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, FUN = mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram(binwidth = diff(range(stepsperday$x))/30) +labs(title ="Steps per Day", x="Steps/day" ,y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, FUN = mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
nsteps
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, Fun=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
+labs(title ="Steps per Day" x=Steps/day" y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, Fun=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(dplyr)
library(plyr)
library(ggplot2)
setwd("/Users/saran/reproduce")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,destfile="activity.zip",method="curl")
unzip(zipfile="./activity.zip")
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram(binwidth = diff(range(stepsperday$x))/30) +labs(title ="Steps per Day", x="Steps/day" ,y="Frequency")
g -> ggplot(stepsperday, aes(x=steps))
g <- ggplot(stepsperday, aes(x=steps))
g <- g + geom_histogram(binwidth = diff(range(stepsperday$x))/30)
g <- g + geom_histogram()
g <- g + ggtitle("Steps per Day")
g <- g + labs(x="Steps/day" ,y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, FUN = mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(steps.interval$steps)]
avgsteps$interval[which.max(avgsteps$steps)]
sum(is.na(activity$steps))
sactivitiy <- activity
nsteps <- is.na(sactivity$steps)
sactivity <- activity
nsteps <- is.na(sactivity$steps)
nsteps
sum(nsteps)
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE)
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE,simplify=TRUE)
sactivity$steps[nsteps] <- avginterval[sactivity$interval[nsteps]]
sactivity$steps[nsteps] <- avginterval[as.character(sactivity$interval[nsteps])]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=sactivity)
ggplot(stepsperday, aes(x=steps))+ geom_histogram()
g <- ggplot(stepsperday, aes(x=steps))
g <- g + geom_histogram()
g <- g + labs(title ="Steps per Day", x=Steps/day",y="Frequency")
g <- g + labs(title ="Steps per Day", x="Steps/day",y="Frequency")
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity <- mutate(sactivity,wtype==ifelse(as.character(as.Date(sactivity$date,"%A"))="Saturday" | as.character(as.Date(sactivity$date,"%A"))="Sunday","Weekend","Weekday"))
sactivity <- mutate(sactivity,wtype=ifelse(as.character(as.Date(sactivity$date,"%A"))
=="Saturday" | as.character(as.Date(sactivity$date,"%A"))=="Sunday","Weekend","Weekday"))
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
weekend <- subset(sactivity,wtype=="Weekend")
avgweekday <- aggregate(steps ~ interval, FUN=mean, data=weekday)
weekday
weekend <- subset(sactivity,wtype=="Weekend")
weekend
head(sactivity)
sactivity <- mutate(sactivity,wtype=as.character(as.Date(sactivity$date,"%A"))
sactivity <- mutate(sactivity,wtype=as.character(as.Date(sactivity$date,"%A")))
sactivity <- mutate(sactivity,wtype=as.Date(sactivity$date,"%A"))
sactivity <- mutate(sactivity,wtype=as.character(wtype))
head(sactivity)
sactivity <- mutate(sactivity,wtype=as.Date(sactivity$date,"%A"))
head(sactivity)
sactivity <- mutate(sactivity,ftype=as.Date(sactivity$date,"%A"))
head(sactivity)
sactivity <- mutate(sactivity,ftype=as.Date(sactivity$date,format="%A"))
head(sactivity)
sactivity <- mutate(sactivity,ftype=strptime(sactivity$date,format="%A"))
head(sactivity)
sactivity <- mutate(sactivity,etype=strptime(sactivity$date,format="%A"))
head(sactivity)
sactivity <- mutate(sactivity,etype=weekdays(sactivity$date)
sactivity <- mutate(sactivity,etype=weekdays(sactivity$date))
sactivity <- mutate(sactivity,etype=weekdays(sactivity$date,abbreviate = FALSE))
library(lubridate)
install.packages(lubridate)
sactivity <- mutate(sactivity,etype=weekdays(as.Date(sactivity$date)))
head(sactivity)
sactivity <- mutate(sactivity,wtype=ifelse(as.character(weekdays(as.Date(sactivity$date))
=="Saturday" |
as.character(weekdays(as.Date(sactivity$date))=="Sunday","Weekend","Weekday"))
head(sactivity)
sactivity <- mutate(sactivity,wtype=ifelse(as.character(weekdays(as.Date(sactivity$date)))
=="Saturday" |
as.character(weekdays(as.Date(sactivity$date)))=="Sunday","Weekend","Weekday"))
head(sactivity)
sactivity$wtype <- as.factor(sactivity$wtype)
weekday <- subset(sactivity,wtype=="Weekday")
head(weekday)
weekend <- subset(sactivity,wtype=="Weekend")
head(weekend)
avgweekday <- aggregate(steps ~ interval, FUN=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, Fun=mean, data=weekend)
avgweekday <- aggregate(steps ~ interval, FUN=mean, data=weekday)
avgweekend <- aggregate(steps ~ interval, FUN=mean, data=weekend)
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
par(mfrow=c(2,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
par(mar=c(1,1,1,1))
plot(avgweekday$interval,avgweekday$steps,type="l",xlab="",ylab="")
plot(avgweekend$interval,avgweekend$steps,type="l",xlab="",ylab="")
dev.off()
library(knitr)
activity <- read.csv("activity.csv")
nactivity <- filter(activity, !is.na(steps))
head(nactivity)
nactivity <- filter(activity, is.na(steps))
head(nactivity)
sum(is.na(sactivity$steps))
sum(is.na(activity$steps))
nactivity <- activity
head(nactivity)
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
g <- ggplot(stepsperday, aes(x=steps))
g <- g + geom_histogram()
g <- g + ggtitle("Steps per Day")
g <- g + labs(x="Steps/day" ,y="Frequency")
meansteps <- mean(nactivity$steps)
meansteps
mediansteps <- median(nactivity$steps)
mediansteps
activity <- read.csv("activity.csv")
nrow(activity)
nactivity <- filter(activity, !is.na(steps))
nrow(nactivity)
stepsperday <- aggregate(steps ~ date, FUN=sum, data=nactivity)
g <- ggplot(stepsperday, aes(steps))
g <- g + geom_histogram(binwidth=5000,fill="darkgreen",alpha=0.5)
library(ggplot2)
g <- ggplot(stepsperday, aes(steps))
g <- ggplot(stepsperday, aes(steps))
g <- g + geom_histogram(binwidth=5000,fill="darkgreen",alpha=0.5)
## g <- g + geom_histogram(binwidth = diff(range(stepsperday$x))/30)
g <- g + ggtitle("Steps per Day")
g <- g + labs(x="Steps/day" ,y="Frequency")
print(g)
meansteps <- mean(nactivity$steps)
mean(nactivity$steps)
median(nactivity$steps)
mean(activity$steps)
meansteps <- mean(stepsperday$steps)
meansteps
mediansteps <- median(stepsperday$steps)
mediansteps
avgsteps <- aggregate(steps ~ interval, FUN = mean, data=nactivity)
plot(avgsteps,type="l")
avgsteps$interval[which.max(avgsteps$steps)]
sum(is.na(activity$steps))
sactivity <- activity
nsteps <- is.na(sactivity$steps)
sum(nsteps)
avginterval <- tapply(sactivity$steps,sactivity$interval,mean,na.rm=TRUE,simplify=TRUE)     #simplify=TRUE
sactivity$steps[nsteps] <- avginterval[as.character(sactivity$interval[nsteps])]
sum(is.na(sactivity$steps))
stepsperday <- aggregate(steps ~ date, FUN=sum, data=sactivity)
g <- ggplot(stepsperday, aes(x=steps))
g <- g + geom_histogram()
g <- g + labs(title ="Steps per Day", x="Steps/day",y="Frequency")
print(g)
meansteps <- mean(sactivity$steps)
meansteps
mediansteps <- median(sactivity$steps)
mediansteps
stepsperday <- aggregate(steps ~ date, FUN=sum, data=sactivity)
g <- ggplot(stepsperday, aes(x=steps))
g <- g + geom_histogram()
g <- g + labs(title ="Steps per Day", x="Steps/day",y="Frequency")
print(g)
meansteps <- mean(stepsperday$steps)
meansteps
mediansteps <- median(stepsperday$steps)
mediansteps
stepsperday <- aggregate(steps ~ date, FUN=sum, data=sactivity)
g <- ggplot(stepsperday, aes(x=steps))
g <- g + geom_histogram(binwidth=5000,fill="blue",alpha=0.5)
g <- g + labs(title ="Steps per Day", x="Steps/day",y="Frequency")
print(g)
knit2html(Reproducible_Research_Project1.Rmd)
